setwd('/Users/smrsp/lung cancer/DATA')


scRNA=readRDS('./scRNA_RPS2.RDS')
scRNAsub=subset(scRNA,celltype=='Malignant cell')
Idents(scRNAsub)=scRNAsub$gene_group ## gene_group！

gc()
library(Seurat)
df=FindMarkers(scRNAsub,ident.1 = 'RPS2+Mali',only.pos = T,logfc.threshold = 0.5)
a=grep('^RP[SL]',rownames(df))
save(df,file ='marker_gene.Rdata')
load('marker_gene.Rdata')
gene=rownames(df)

load('./LUAD_tpm.Rdata')

metadata=data.frame(id= colnames(exprSet),group_list)
metadata_tumor= metadata[metadata$group_list=='tumor',]
exprSet=exprSet[,metadata_tumor$id]
exprSet1=log2(exprSet+1)
max(exprSet1)

suv=read.table('TCGA-LUAD.survival.tsv',row.names = 1,header = T,check.names = F)
surv1=dplyr::select(suv,'OS.time','OS')
colnames(surv1)=c("futime", "fustat")

sameSample=intersect(colnames(exprSet1),row.names(surv1))


exprSet1=exprSet1[,sameSample]
surv1=surv1[sameSample,]

all_samples <- colnames(exprSet1)

total_samples <- length(all_samples)

train_sample_size <- floor(0.6 * total_samples)

set.seed(123) 
train_samples <- sample(all_samples, train_sample_size)

valid_samples <- setdiff(all_samples, train_samples)

exprSet_train <- exprSet1[, train_samples]
exprSet_valid <- exprSet1[, valid_samples]

surv_train <- surv1[train_samples, ]
surv_valid <- surv1[valid_samples, ]

train=exprSet_train
test=exprSet_valid
surv1=surv_train
surv2=surv_valid
save(test,surv2,file ='validation.Rdata')
save(train,surv1,file ='train.Rdata')

load('validation.Rdata')
load('train.Rdata')

data=train[rownames(train) %in% gene,]
data=as.data.frame(t(data))


rt=cbind(surv1,data)
rt$futime=rt$futime/365

library(survminer)
library(survival)
library(dplyr)
library(caret)

pFilter=0.05                                    
outTab=data.frame()
sigGenes=c("futime","fustat")

for(i in colnames(rt[,3:ncol(rt)])){
  cox <- coxph(Surv(futime, fustat) ~ rt[,i], data = rt)
  coxSummary = summary(cox)
  coxP=coxSummary$coefficients[,"Pr(>|z|)"]
  if(!is.na(coxP) && coxP < pFilter){
    sigGenes=c(sigGenes,i)
    outTab=rbind(outTab,
                 cbind(id=i,
                       HR=coxSummary$conf.int[,"exp(coef)"],
                       HR.95L=coxSummary$conf.int[,"lower .95"],
                       HR.95H=coxSummary$conf.int[,"upper .95"],
                       pvalue=coxSummary$coefficients[,"Pr(>|z|)"])
    )
  }
}

write.table(outTab,file="uniCox_tcga.txt",sep="\t",row.names=F,quote=F)


uniSigExp=rt[,sigGenes]
uniSigExp=cbind(id=row.names(uniSigExp),uniSigExp)
write.table(uniSigExp,file="uniSigExp_gene.txt",sep="\t",row.names=F,quote=F)

library(ggplot2)
library(scales)
library(ggstatsplot)
library(viridis)
library(tibble)


library(forestplot)
data <- read.table("uniCox_tcga.txt",header = T)
head(data)
colnames(data)[1]='gene'
data1 <- data %>% dplyr::filter(HR > 1)
data2 <- data %>% dplyr::filter(HR < 1)

hrtable <- rbind(
  c("Increase in Hazard", NA, NA, NA, NA, NA),
  data1,
  c("Reduce in Hazard", NA, NA, NA, NA, NA),
  data2
)

tabletext <- cbind(
  c("Gene", "Increase in Hazard", data1$gene, "Reduce in Hazard", data2$gene),
  c("P-value", NA, data1$pvalue, NA, data2$pvalue),
  c("Hazard Ratio", NA, data1$`HR`, NA, data2$`HR`)
)
which(tabletext[, 1] == "Reduction in Hazard")
nrow(tabletext) + 1

quantile(data$HR.95L)
quantile(data$HR.95H)

forestplot(
  labeltext = tabletext, 
  mean = c(NA, as.numeric(hrtable$HR)), 
  lower = c(NA, as.numeric(hrtable$HR.95L)), 
  upper = c(NA, as.numeric(hrtable$HR.95H)), 
  graph.pos = 4, 
  graphwidth = unit(.4, "npc"), 
  fn.ci_norm = "fpDrawDiamondCI", 
  col = fpColors(box = "#CD534CFF", lines = "#0073C2FF", zero = "#0073C2FF"), 
  boxsize = 0.7, 
  lwd.ci = 3, ci.vertices.height = 0.125,
  ci.vertices = T, 
  zero = 1, 
  lwd.zero = 2,
  xticks = seq(0, 4, 1), 
  lwd.xaxis = 2, 
  xlab = "Hazard Ratio",
  hrzl_lines = list(
    "1" = gpar(lwd = 2, col = "black"), 
    "3" = gpar(lwd = 1, col = "grey50", lty = 2),
    "29" = gpar(lwd = 1, col = "grey50", lty = 2), 
    "1" = gpar(lwd = 2, col = "black")
  ), 
  lineheight = unit(0.8, "cm"), 
  txt_gp = fpTxtGp(
    label = gpar(cex = 1), 
    ticks = gpar(cex = 1.25),
    xlab = gpar(cex = 1.85),
    title = gpar(cex = 1.5)
  ),
  clip = c(0, 2),
  colgap = unit(0.15, "cm"), 
  mar = unit(rep(1.25, times = 4), "cm"),
  new_page = F 
)
dev.off()

# lasso_cox-------
rt=read.table('uniSigExp_gene.txt',row.names = 1,header = T)
set.seed(2)  

x=as.matrix(rt[,c(3:ncol(rt))]) 
y=data.matrix(Surv(rt$futime,rt$fustat)) 
library(glmnet)
fit=glmnet(x, y, family = "cox", alpha = 1) 

plot(fit, xvar = "lambda", label = F)

cvfit = cv.glmnet(x, y, family="cox",nfolds = 10,alpha=1) 
plot(cvfit) 

coef =coef(fit,s = cvfit$lambda.min)
index = which(coef !=0)
actCoef = coef[index] 
lassoGene = row.names(coef)[index] 
geneCoef = cbind(Gene=lassoGene,Coef=actCoef) 
geneCoef   
write.table(geneCoef,file = 'lasso_output_final.txt',quote = F,sep = '\t',row.names = F)

library(survival)                                       

cols_to_select <- c(geneCoef[, 1], "fustat", "futime")

rt=read.table("uniSigExp_gene.txt",header=T,sep="\t",check.names=F,row.names=1)    

rt1=rt[c(cols_to_select,'fustat','futime')]
colnames(rt1)[(ncol(rt1)-1) : ncol(rt1)]=c('Event','Time')

cols_to_remove <- c("fustat", "futime")

rt1 = rt1[, setdiff(colnames(rt1), cols_to_remove)]

write.csv(rt1,file ='train_gene_data.csv',row.names = F,quote = F)


data2=test[lassoGene,]
data2=as.data.frame(t(data2))
rt2=cbind(data2,surv2)
colnames(rt2)[(ncol(rt2)-1) : ncol(rt2)]=c('Event','Time')
rt2$Event=rt2$Event/365
write.csv(rt2,file ='vali_gene_data.csv',row.names = F,quote = F)
### ---- python

## ----R
risk=read.csv('./risk_train.csv')
risk=risk$X0
rt=read.table("uniSigExp_gene.txt",header=T,sep="\t",check.names=F,row.names=1)   
rt1=rt
rt1$risk=risk
rt1$group=ifelse(rt1$risk>median(rt1$risk),'High','Low')
rt1$group=factor(rt1$group)
rt1$group=relevel(rt1$group,ref = 'Low')

library(survival)
library(survminer)
fit <- survfit(Surv(futime, fustat) ~ group, data = rt1)

ggsurvplot(fit, 
           data=rt1,
           pval = T,
           conf.int=T,
           pval.size=4,
           risk.table=F,
           legend=c(0.88,0.88),
           legend.labs=c("Low", "High"),
           legend.title= "risk" ,
           xlab="Years",
           risk.table.title="",
           surv.median.line = 'hv',
           palette = c('#0072B5','#BC3C29'),
           risk.table.height=.25,
           font.title=12,
)

library(timeROC)
timeROC <- with(rt1, 
                timeROC(T = futime,
                        delta =fustat,
                        marker = risk, 
                        cause = 1, 
                        times = c(1,3,5), 
                        ROC = TRUE, 
                        iid = TRUE, 
                        weighting = "marginal")) 
print(timeROC)

df <- data.frame(FPR = as.numeric(timeROC$FP),
                 TPR = as.numeric(timeROC$TP),
                 time = rep(as.factor(c(1,3,5)), each = nrow(timeROC$TP)))
head(df)

mytheme <- theme(axis.title = element_text(size = 13),
                 axis.text = element_text(size = 11),
                 plot.title = element_text(size = 14,
                                           hjust = 0.5,
                                           face = "bold"),
                 legend.title = element_text(size = 13),
                 legend.text = element_text(size = 11),
                 legend.background = element_rect(linetype = 1, size = 0.25, colour = "black"),
                 legend.position = c(1, 0),
                 legend.justification = c(1, 0))

p <- ggplot() +
  geom_line(data = df,aes(x = FPR, y = TPR, color = time), size = 1) +
  geom_line(aes(x = c(0,1),y = c(0,1)),color = "grey") +
  scale_color_manual(name = NULL, values = c("#8AD879","#FA9F42", "#F3533A"),
                     labels = c("1 Years(AUC = 0.716)" ,"2 Years(AUC = 0.716)", "5 Years(AUC = 0.703)"))+
  theme_bw() +
  mytheme +
  labs(x = "1 - Specificity (FPR)",
       y = "Sensitivity (TPR)")
p



risk=read.csv('./risk_vali.csv')

#load('validation.Rdata')

rt2=surv2
rt2$futime=rt2$futime/365
rt2$risk=risk$X0
rt2$group=ifelse(rt2$risk>median(rt2$risk),'High','Low')
rt2$group=factor(rt2$group)
rt2$group=relevel(rt2$group,ref = 'Low')
fit <- survfit(Surv(futime, fustat) ~ group, data = rt2)

ggsurvplot(fit, 
           data=rt2,
           pval = T,
           conf.int=T,
           pval.size=4,
           risk.table=F,
           legend=c(0.88,0.88),
           legend.labs=c("Low", "High"),
           legend.title= "risk" ,
           xlab="Years",
           risk.table.title="",
           surv.median.line = 'hv',
           palette = c('#0072B5','#BC3C29'),
           risk.table.height=.25,
           font.title=12,
)


library(timeROC)
timeROC <- with(rt2, #with限制数据框;
                timeROC(T = futime,
                        delta =fustat,
                        marker = risk, 
                        cause = 1, 
                        times = c(1,3,5),
                        ROC = TRUE, 
                        iid = TRUE, 
                        weighting = "marginal")) 
print(timeROC)

df <- data.frame(FPR = as.numeric(timeROC$FP),
                 TPR = as.numeric(timeROC$TP),
                 time = rep(as.factor(c(1,3,5)), each = nrow(timeROC$TP)))
head(df)

mytheme <- theme(axis.title = element_text(size = 13),
                 axis.text = element_text(size = 11),
                 plot.title = element_text(size = 14,
                                           hjust = 0.5,
                                           face = "bold"),
                 legend.title = element_text(size = 13),
                 legend.text = element_text(size = 11),
                 legend.background = element_rect(linetype = 1, size = 0.25, colour = "black"),
                 legend.position = c(1, 0),
                 legend.justification = c(1, 0))

#timeROC绘制：
p <- ggplot() +
  geom_line(data = df,aes(x = FPR, y = TPR, color = time), size = 1) +
  geom_line(aes(x = c(0,1),y = c(0,1)),color = "grey") +
  scale_color_manual(name = NULL, values = c("#8AD879","#FA9F42", "#F3533A"),
                     labels = c("1 Years(AUC = 0.716)" ,"2 Years(AUC = 0.716)", "5 Years(AUC = 0.703)"))+
  theme_bw() +
  mytheme +
  labs(x = "1 - Specificity (FPR)",
       y = "Sensitivity (TPR)")
p
